openapi: 3.0.2
servers: []
info:
  version: "2.0"
  title: GA4GH Beacon API Specification
  description: >-
    A Beacon is a web service for genetic data sharing that can be queried for information about variants, individuals or samples.
  contact:
    email: beacon@ga4gh.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: 'Beacon Project'
  url: http://beacon-project.io/
paths:
  /:
    get:
      description: Get information about the beacon
      operationId: getBeacon
      tags:
        - Endpoints
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beacon'
  /query:
    get:
      description: Get response to a beacon query for allele information.
      operationId: getBeaconAlleleResponse
      tags:
        - v1
      parameters:
        - name: referenceName
          description: 'Reference name (chromosome). Accepting values 1-22, X, Y, MT.'
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Chromosome'
        - name: start
          description: |
            Precise start coordinate position, allele locus (0-based, inclusive).
            * start only:
              - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases
              - typical use are queries for SNV and small InDels
              - the use of "start" without an "end" parameter requires the use of "referenceBases"
            * start and end:
              - special use case for exactly determined structural changes
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: startMin
          description: |
            Minimum start coordinate
            * startMin + startMax + endMin + endMax
              - for querying imprecise positions (e.g. identifying all structural variants starting anywhere between startMin <-> startMax, and ending anywhere between endMin <-> endMax)
              - single or double sided precise matches can be achieved by setting startMin = startMax XOR endMin = endMax
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: startMax
          description: |
            Maximum start coordinate. See startMin.
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: end
          description: |
            Precise end coordinate (0-based, exclusive). See start.
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: endMin
          description: |
            Minimum end coordinate. See startMin.
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: endMax
          description: |
            Maximum end coordinate. See startMin.
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: referenceBases
          description: |
            Reference bases for this variant (starting from `start`). Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.
          in: query
          required: true
          schema:
            type: string
            pattern: '^([ACGTN]+)$'
        - name: alternateBases
          description: >
            The bases that appear instead of the reference bases. Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.

            Symbolic ALT alleles (DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME,
            INS:ME) will be represented in `variantType`.

            Optional: either `alternateBases` or `variantType` is required.
          in: query
          required: false
          schema:
            type: string
            pattern: '^([ACGTN]+)$'
        - name: variantType
          description: |
            The `variantType` is used to denote e.g. structural variants.

            Examples:
            * DUP: duplication of sequence following `start`; not necessarily in
            situ
            * DEL: deletion of sequence following `start`
            * BND: breakend, i.e. termination of the allele at position
                  `start` or in the `startMin` => `startMax` interval, or fusion
                  of the sequence to distant partner

            Optional: either `alternateBases` or `variantType` is required.
          in: query
          required: false
          schema:
            type: string
          examples:
            dup:
              value: DUP
              summary: duplication of sequence following `start`; not necessarily in
            del:
              value: DEL
              summary: deletion of sequence following `start`
        - name: assemblyId
          description: 'Assembly identifier (GRC notation, e.g. GRCh37).'
          in: query
          required: true
          schema:
            type: string
        - name: mateName
          description: |
            Second chromosome for fusion events. This can be
            * empty (no fusion or unknown partner)
            * identical to `referenceName` (e.g. one side of an inversion)
            * a different chromosome
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Chromosome'
        - name: datasetIds
          description: >-
            Identifiers of datasets, as defined in "BeaconDataset". If this
            field is null/not specified, all datasets should be queried.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeDatasetResponses
          description: >
            Indicator of whether responses for individual datasets
            (datasetAlleleResponses) should be included in the response
            (BeaconAlleleResponse) to this request or not.

            If null (not specified), the default value of NONE is assumed.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ALL
              - HIT
              - MISS
              - NONE
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BeaconAlleleResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
    post:
      description: Gets response to a beacon query for allele information.
      operationId: postBeaconAlleleResponse
      tags:
        - v1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BeaconAlleleResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconAlleleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeaconAlleleRequest'
        required: true
  /individuals:
    post:
      description: Gets response to a beacon query for individual information.
      operationId: postIndividualResponse
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualRequest'
            examples:
              individualQuery:
                $ref: '#/components/examples/IndividualQuery'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndividualResponse'
              examples:
                IndividualResponse:
                  $ref: '#/components/examples/IndividualResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualResponse'
  /samples:
    post:
      description: Gets response to a beacon query for individual information.
      operationId: postSampleResponse
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleRequest'
            examples:
              individualQuery:
                $ref: '#/components/examples/SampleQuery'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleResponse'
              examples:
                IndividualResponse:
                  $ref: '#/components/examples/SampleResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResponse'
  /g_variant:
    post:
      description: Any kind of genomic query that wants to query variants.
      operationId: postGenomicVariant
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicVariantRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenomicVariantResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicVariantResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicVariantResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicVariantResponse'
  /genomic_snp_request:
    post:
      description: Description pending
      operationId: postGenomicSnpRequest
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicSnpRequest'
            examples:
              snpQuery:
                $ref: '#/components/examples/SnpQuery'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenomicSnpResponse'
              examples:
                snpResponse:
                  $ref: '#/components/examples/SnpResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicSnpResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicSnpResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicSnpResponse'
  /genomic_region_request:
    post:
      description: Description pending
      operationId: postGenomicRegionRequest
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicRegionRequest'
            examples:
              regionQuery:
                $ref: '#/components/examples/RegionQuery'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenomicRegionResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicRegionResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicRegionResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicRegionResponse'
  /genomic_cnv_request:
    post:
      description: Description pending
      operationId: genomicCnvRequest
      tags:
        - Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenomicCNVRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenomicCNVResponse'
        '400':
          description: Bad request (e.g. missing mandatory parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicCNVResponse'
        '401':
          description: >-
            Unauthorised (e.g. when an unauthenticated user tries to access a
            protected resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicCNVResponse'
        '403':
          description: >-
            Forbidden (e.g. the resource is protected for all users or the user
            is authenticated but s/he is not granted for this resource)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenomicCNVResponse'
components:
  schemas:
    Chromosome:
      description: 'Reference name (chromosome). Accepting values 1-22, X, Y, MT.'
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
        - '21'
        - '22'
        - 'X'
        - 'Y'
        - 'MT'
    Assembly:
      description: 'Assembly identifier (GRC notation, e.g. GRCh37).'
      type: string
      example: GRCh38
    ReferenceBases:
      description: 'Reference bases for this variant (starting from `start`). Accepted values: [ACGT]*.'
      type: string
      pattern: '^([ACGT]+)$'
    AlternateBases:
      description: 'The bases that appear instead of the reference bases. Accepted values: [ACGT]*.'
      type: string
      pattern: '^([ACGT]+)$'
    Filters:
      description: Ontology based filters. CURIE syntax is encouraged to be used.
      type: array
      items:
        type: string
      example: 
        'BTO:0000199'
    CustomFilters:
      description: Custom filters defined by this Beacon.
      type: array
      items:
        type: string
      example:
        'mydict.aterm:avalue,mydict.aterm2:avalue2'
    
    RequestDatasets:
      description: >-
        Identifiers of datasets, as defined in `BeaconDataset`. If this
        field is null/not specified, all datasets should be queried.
      type: object
      properties:
        datasetIds:
          description: >
            List of dataset Ids to be searched.
          type: array
          items:
            type: string
        includeDatasetResponses:
          description: >-
            Indicator of whether responses for individual datasets
            (datasetAlleleResponses) should be included in the response
            (BeaconAlleleResponse) to this request or not. If null (not
            specified), the default value of NONE is assumed.
          type: string
          enum:
            - ALL
            - HIT
            - MISS
            - NONE
    RequestMeta:
      description: Format of the responses and version of the Beacon handling this request.
      type: object
      required:
        - request
        - apiVersion
      properties:
        request:
          description: 'Schema version(s) to be used for the components specified'
          type: object
          example: 
            Individual: 
              - ga4gh-phenopacket-individual-v0.1
              - ga4gh-schemablocks-individual-v0.1
            Variant: 
              - ga4gh-variant-representation-v0.1
              - ga4gh-schemablocks-beacon-variant-v0.1
        apiVersion:
          description: 'Version of the Beacon to be used to answer the query'
          type: string
          example:
            'v2.0'
    
    ResponseBasicStructure:
      description: Description pending
      type: object
      required:
        - version
        - value
      properties:
        version:
          type: string
          example: 'beacon-individual-v1.0'
        value:
          type: object
    ResponseResult:
      description: Description pending
      properties:
        default:
          $ref: '#/components/schemas/ResponseBasicStructure'
        alternativeSchemas:
          type: array
          items:
            $ref: '#/components/schemas/ResponseBasicStructure'
    
    VariantsFoundResponse:
      description: Description pending
      properties:
        variant:
          $ref: '#/components/schemas/ResponseResult'
        variantAnnotations:
          $ref: '#/components/schemas/ResponseResult'
        variantHandover:
          type: array
          items:
            $ref: '#/components/schemas/Handover'
        datasetAlleleRespones:
          type: array
          items:
            $ref: '#/components/schemas/BeaconDatasetAlleleResponse'
    GenomicResponseResults:
      description: Description pending
      type: object
      required:
        - VariantsFoundResponse
      properties:
        VariantsFoundResponse:
          type: array
          items:
            $ref: '#/components/schemas/VariantsFoundResponse'
            
    GenomicSnpRequest:
      description: Search for a genomic SNP
      type: object
      required:
        - query
      properties:
        meta:
          $ref: '#/components/schemas/RequestMeta'
        query:
          $ref: '#/components/schemas/GenomicSnpQuery'
    GenomicSnpQuery:
      description: Fields available in a SNP query.
      required:
        - variant
      properties:
        variant:
          $ref: '#/components/schemas/GenomicSnpFields'
        datasets:
          $ref: '#/components/schemas/RequestDatasets'
        filters:
          $ref: '#/components/schemas/Filters'
        customFilters:
          $ref: '#/components/schemas/CustomFilters'
    GenomicSnpFields:
      description: Description pending
      type: object
      required:
        - assemblyId
        - referenceName
        - start
        - referenceBases
        - alternateBases
      properties: 
        assemblyId:
          $ref: '#/components/schemas/Assembly'
        referenceName:
          $ref: '#/components/schemas/Chromosome'
        referenceBases:
          $ref: '#/components/schemas/ReferenceBases'
        alternateBases:
          $ref: '#/components/schemas/AlternateBases'
        start:
          description: |
            Precise start coordinate position, allele locus (0-based, inclusive).
            * start only:
              - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases
              - typical use are queries for SNV and small InDels
          type: integer
          format: int64
          minimum: 0
    GenomicSnpResponse:
      description: Response of a genomic SNP query
      type: object
      properties:
        meta:
          type: object
          example: 
            Individual: 
              - ga4gh-phenopacket-individual-v0.1
              - ga4gh-schemablocks-individual-v0.1
            Variant: 
              - ga4gh-variant-representation-v0.1
              - ga4gh-schemablocks-beacon-variant-v0.1
        value:
          $ref: '#/components/schemas/GenomicSnpResponseValue'
    GenomicSnpResponseValue:
      description: Description pending
      type: object
      required:
        - beaconId
        - apiVersion
        - request
        - results
      properties:
        beaconId:
          type: string
        apiVersion:
          type: string
        error:
          $ref: '#/components/schemas/BeaconError'
        request:
          $ref: '#/components/schemas/GenomicSnpRequest'
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenomicResponseResults'
    
    GenomicRegionRequest:
      description: Search for a genomic region
      type: object
      required:
        - query
      properties:
        meta:
          $ref: '#/components/schemas/RequestMeta'
        query:
          $ref: '#/components/schemas/GenomicRegionQuery'
    GenomicRegionQuery:
      description: Fields available in a region query.
      required:
        - variant
      properties:
        variant:
          $ref: '#/components/schemas/GenomicRegionFields'
        datasets:
          $ref: '#/components/schemas/RequestDatasets'
        filters:
          description: Description pending
          type: array
          items:
            type: string
          example: 
            'BTO:0000199'
        customFilters:
          description: Description pending
          type: array
          items:
            type: string
          example:
            'mydict.aterm:avalue,mydict.aterm2:avalue2'
    GenomicRegionFields:
      description: Region request made against the Beacon. 
      type: object
      required:
        - assemblyId
        - referenceName
        - start
        - end
      properties: 
        assemblyId:
          $ref: '#/components/schemas/Assembly'
        referenceName:
          $ref: '#/components/schemas/Chromosome'
        referenceBases: 
          $ref: '#/components/schemas/ReferenceBases'
        start:
          description: |
            Precise `start` coordinate position, allele locus (0-based, inclusive).
          type: integer
          format: int64
          minimum: 0
        end:
          description: Precise `end` coordinate (0-based, exclusive). See `start`.
          type: integer
    GenomicRegionResponse:
      description: Response of a genomic region query
      type: object
      properties:
        meta:
          type: object
          example: >-
            Individual: [ga4gh-phenopacket-individual-v0.1,ga4gh-schemablocks-individual-v0.1],
            Variant: ["ga4gh-variant-representation-v0.1", "ga4gh-schemablocks-beacon-variant-v0.1"]
        value:
          $ref: '#/components/schemas/GenomicRegionResponseValue'
    GenomicRegionResponseValue:
      description: Description pending
      type: object
      required:
        - beaconId
        - apiVersion
        - request
        - results
      properties:
        beaconId:
          type: string
        apiVersion:
          type: string
        error:
          $ref: '#/components/schemas/BeaconError'
        request:
          $ref: '#/components/schemas/GenomicRegionRequest'
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenomicResponseResults'
    
    GenomicCNVRequest:
      description: Search for a genomic CNV
      type: object
    GenomicCNVResponse:
      description: Response of a genomic CNV query
    
    GenomicVariantRequest:
      description: Search for a genomic region
      type: object
      required:
        - query
      properties:
        meta:
          $ref: '#/components/schemas/RequestMeta'
        query:
          $ref: '#/components/schemas/GenomicVariantQuery'
    GenomicVariantQuery:
      description: Description pending
      type: object
      required:
        - query
      properties:
        variant:
          $ref: '#/components/schemas/GenomicVariantFields'
        datasets:
          $ref: '#/components/schemas/RequestDatasets'
        filters:
         $ref: '#/components/schemas/Filters'
        customFilters:
          $ref: '#/components/schemas/CustomFilters'
    GenomicVariantFields:
      description: All the required fields to query any kind of variant (e.g. SNP, DUP, etc.).
      type: object
      required:
        - assemblyId
        - referenceName
        - start
      properties:
        assemblyId:
          $ref: '#/components/schemas/Assembly'
        referenceName:
          $ref: '#/components/schemas/Chromosome'
        start:
          description: |
            Precise or fuzzy start coordinate position(s), allele locus (0-based, inclusive).
            * start only:
              - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases
              - typical use are queries for SNV and small InDels
              - THIS IS NOT TRUE FOR RANGE QUERIES!!!! -> the use of "start" without an "end" parameter requires the use of "referenceBases"
            * `start` and `end`:
              - special use case for exactly determined structural changes
            * use 2 values for querying imprecise positions (e.g. identifying all structural variants starting anywhere between `start[0]` <-> `start[1]`, and ending anywhere between `end[0]` <-> `end[1]`)
            * IS THIS NECESSARY???? -> single or double sided precise matches can be achieved by setting `start[0]` = `start[1]` XOR `end[0]` = `end[1]`
          type: array
          items:
            type: integer
            format: int64
          minimum: 0
        end:
          description: |
            Precise or fuzzy end coordinate(s) (0-based, exclusive). See start. 
            For fuzzy matches, provide 2 values in the array (e.g. [111,222]).
          type: array
          items:
            type: integer
            format: int64
        referenceBases:
          description: |
            Reference bases for this variant (starting from `start`). Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.
          type: string
          pattern: '^([ACGTN]+)$'
        alternateBases:
          description: |
            The bases that appear instead of the reference bases. Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.
            Symbolic ALT alleles (DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME,
            INS:ME) will be represented in `variantType`.
            Optional: either `alternateBases` or `variantType` is required.
          type: string
          pattern: '^([ACGTN]+)$'
        variantType:
          description: |
            The `variantType` is used to denote e.g. structural variants.
            Examples:
            * DUP: duplication of sequence following `start`; not necessarily in
            situ
            * DEL: deletion of sequence following `start`
            * BND: breakend, i.e. termination of the allele at position
                  `start` or in the `startMin` => `startMax` interval, or fusion
                  of the sequence to distant partner
            Optional: either `alternateBases` or `variantType` is required.
          type: string
        mateName:
          $ref: '#/components/schemas/Chromosome'
    GenomicVariantResponse:
      description: Response of a genomic variant query
      type: object
      properties:
        meta:
          type: object
          example: >-
            Individual: [ga4gh-phenopacket-individual-v0.1,ga4gh-schemablocks-individual-v0.1],
            Variant: ["ga4gh-variant-representation-v0.1", "ga4gh-schemablocks-beacon-variant-v0.1"]
        value:
          $ref: '#/components/schemas/GenomicVariantResponseValue'
    GenomicVariantResponseValue:
      description: Description pending
      type: object
      required:
        - beaconId
        - apiVersion
        - request
        - results
      properties:
        beaconId:
          type: string
        apiVersion:
          type: string
        error:
          $ref: '#/components/schemas/BeaconError'
        request:
          $ref: '#/components/schemas/GenomicVariantRequest'
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenomicResponseResults'
    
    IndividualRequest:
      description: Description pending
      type: object
      required:
        - query
      properties:
        meta:
          $ref: '#/components/schemas/RequestMeta'
        query:
          $ref: '#/components/schemas/GenomicVariantQuery'
    IndividualResponse:
      description: Description pending
      type: object
      properties:
        meta:
          type: object
          example:
            Individual: 
              - "ga4gh-phenopacket-individual-v0.1"
              - "ga4gh-schemablocks-individual-v0.1"
            Variant: 
              - "ga4gh-variant-representation-v0.1"
              - "ga4gh-schemablocks-beacon-variant-v0.1"
        value:
          $ref: '#/components/schemas/IndividualResponseValue'
    IndividualResponseValue:
      description: Description pending
      type: object
      required:
        - beaconId
        - apiVersion
        - request
        - results
      properties:
        beaconId:
          type: string
        apiVersion:
          type: string
        error:
          $ref: '#/components/schemas/BeaconError'
        request:
          $ref: '#/components/schemas/IndividualRequest'
        results:
          type: array
          items:
            $ref: '#/components/schemas/IndividualResponseResults'
    IndividualResponseResults:
      description: Description pending
      type: object
      required:
        - individual
        - samples
        - VariantsFoundResponse
      properties:
        individual:
          $ref: '#/components/schemas/ResponseResult'
        samples:
          type: array
          items:
            $ref: '#/components/schemas/ResponseResult'
        VariantsFoundResponse:
          type: array
          items:
            $ref: '#/components/schemas/VariantsFoundResponse'
    
    SampleRequest:
      description: Description pending
      type: object
      required:
        - query
      properties:
        meta:
          $ref: '#/components/schemas/RequestMeta'
        query:
          $ref: '#/components/schemas/GenomicVariantQuery'
    SampleResponse:
      description: Description pending
      type: object
      properties:
        meta:
          type: object
          example: >-
            Individual: [ga4gh-phenopacket-individual-v0.1, ga4gh-schemablocks-individual-v0.1],
            Variant: ["ga4gh-variant-representation-v0.1", "ga4gh-schemablocks-beacon-variant-v0.1"]
        value:
          $ref: '#/components/schemas/SampleResponseValue'
    SampleResponseValue:
      description: Description pending
      type: object
      required:
        - beaconId
        - apiVersion
        - request
        - results
      properties:
        beaconId:
          type: string
        apiVersion:
          type: string
        error:
          $ref: '#/components/schemas/BeaconError'
        request:
          $ref: '#/components/schemas/IndividualRequest'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SampleResponseResults'
    SampleResponseResults:
      description: Description pending
      type: object
      required:
        - individual
        - samples
        - VariantsFoundResponse
      properties:
        sample:
          $ref: '#/components/schemas/ResponseResult'
        individuals:
          type: array
          items:
            $ref: '#/components/schemas/ResponseResult'
        VariantsFoundResponse:
          type: array
          items:
            $ref: '#/components/schemas/VariantsFoundResponse'
    
    Beacon:
      description: Metadata describing a beacon instance.
      type: object
      required:
        - id
        - name
        - apiVersion
        - organization
        - datasets
      properties:
        id:
          type: string
          description: Unique identifier of the beacon. Use reverse domain name notation.
          example: org.ga4gh.beacon
        name:
          type: string
          description: Name of the beacon.
        apiVersion:
          type: string
          description: Version of the API provided by the beacon.
          example: v0.3
        organization:
          $ref: '#/components/schemas/BeaconOrganization'
        description:
          type: string
          description: Description of the beacon.
        version:
          type: string
          description: Version of the beacon.
          example: v0.1
        welcomeUrl:
          type: string
          description: URL to the welcome page for this beacon (RFC 3986 format).
          example: 'http://example.org/wiki/Main_Page'
        alternativeUrl:
          type: string
          description: >-
            Alternative URL to the API, e.g. a restricted version of this beacon
            (RFC 3986 format).
          example: 'http://example.org/wiki/Main_Page'
        createDateTime:
          type: string
          description: The time the beacon was created (ISO 8601 format).
          example: '2012-07-19 or 2017-01-17T20:33:40Z'
        updateDateTime:
          type: string
          description: The time the beacon was updated in (ISO 8601 format).
          example: '2012-07-19 or 2017-01-17T20:33:40Z'
        datasets:
          description: >-
            Dataset(s) served by the beacon.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BeaconDataset'
        sampleAlleleRequests:
          description: >-
            Examples of interesting queries, e.g. a few queries demonstrating
            different responses.
          type: array
          items:
            $ref: '#/components/schemas/BeaconAlleleRequest'
        info:
          description: 'Additional unspecified metadata about the Beacon service.'
          type: object
          example:
            additionalInfoKey1: additionalInfoValue1
            additionalInfoKey2: [ additionalInfoValue2, additionalInfoValue3]
    BeaconAlleleRequest:
      description: Allele request made against the beacon. The allele must be mapped against a sequence in a genome, and a range can be optionally specified.
      type: object
      required:
        - referenceName
        - referenceBases
        - assemblyId
      properties:
        referenceName:
          $ref: '#/components/schemas/Chromosome'
        start:
          description: |
            Precise start coordinate position, allele locus (0-based, inclusive).
            * start only:
              - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases
              - typical use are queries for SNV and small InDels
              - the use of "start" without an "end" parameter requires the use of "referenceBases"
            * start and end:
              - special use case for exactly determined structural changes
          type: integer
          format: int64
          minimum: 0
        end:
          description: Precise end coordinate (0-based, exclusive). See start.
          type: integer
        startMin:
          description: |
            Minimum start coordinate
            * startMin + startMax + endMin + endMax
              - for querying imprecise positions (e.g. identifying all structural variants starting anywhere between startMin <-> startMax, and ending anywhere between endMin <-> endMax)
              - single or double sided precise matches can be achieved by setting startMin = startMax XOR endMin = endMax
          type: integer
        startMax:
          description: Maximum start coordinate. See startMin.
          type: integer
        endMin:
          description: Minimum end coordinate. See startMin.
          type: integer
        endMax:
          description: Maximum end coordinate. See startMin.
          type: integer
        referenceBases:
          description: |
            Reference bases for this variant (starting from `start`). Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.
          type: string
          pattern: '^([ACGTN]+)$'
        alternateBases:
          description: |
            The bases that appear instead of the reference bases. Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.

            Symbolic ALT alleles (DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME,
            INS:ME) will be represented in `variantType`.

            Optional: either `alternateBases` or `variantType` is required.
          type: string
          pattern: '^([ACGTN]+)$'
        variantType:
          description: |
            The `variantType` is used to denote e.g. structural variants.

            Examples:
            * DUP: duplication of sequence following `start`; not necessarily in
            situ
            * DEL: deletion of sequence following `start`
            * BND: breakend, i.e. termination of the allele at position
                  `start` or in the `startMin` => `startMax` interval, or fusion
                  of the sequence to distant partner


            Optional: either `alternateBases` or `variantType` is required.
          type: string
        mateName:
          $ref: '#/components/schemas/Chromosome'
        assemblyId:
          description: 'Assembly identifier (GRC notation, e.g. `GRCh37`).'
          type: string
          example: GRCh38
        datasetIds:
          description: >-
            Identifiers of datasets, as defined in `BeaconDataset`. If this
            field is null/not specified, all datasets should be queried.
          type: array
          items:
            type: string
        includeDatasetResponses:
          description: >-
            Indicator of whether responses for individual datasets
            (datasetAlleleResponses) should be included in the response
            (BeaconAlleleResponse) to this request or not. If null (not
            specified), the default value of NONE is assumed.
          type: string
          enum:
            - ALL
            - HIT
            - MISS
            - NONE
    BeaconAlleleResponse:
      description: Response to a query for information about an allele, made against the beacon.
      type: object
      required:
        - beaconId
      properties:
        beaconId:
          description: 'Identifier of the beacon, as defined in `Beacon`.'
          type: string
        apiVersion:
          description: >-
            Version of the API. If specified, the value must match `apiVersion`
            in Beacon
          type: string
        exists:
          description: >-
            Indicator of whether the given allele was observed in any of the
            datasets queried. This should be non-null, unless there was an
            error, in which case `error` has to be non-null.
          type: boolean
        alleleRequest:
          $ref: '#/components/schemas/BeaconAlleleRequest'
        datasetAlleleResponses:
          description: >-
            Indicator of whether the given allele was  observed in individual
            datasets. This should be non-null if `includeDatasetResponses` in
            the corresponding `BeaconAlleleRequest` is true, and null otherwise.
          type: array
          items:
            $ref: '#/components/schemas/BeaconDatasetAlleleResponse'
        error:
          $ref: '#/components/schemas/BeaconError'
        info:
          description: 'Additional unspecified metadata about the response or its content.'
          type: object
          example:
            additionalInfoKey: additionalInfoValue
        beaconHandover:
          type: array
          items:
            $ref: '#/components/schemas/Handover'
    BeaconOrganization:
      description: Organization owning the beacon.
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Unique identifier of the organization.
        name:
          type: string
          description: Name of the organization.
        description:
          type: string
          description: Description of the organization.
        address:
          type: string
          description: Address of the organization.
        welcomeUrl:
          type: string
          description: URL of the website of the organization (RFC 3986 format).
        contactUrl:
          type: string
          description: >-
            URL with the contact for the beacon operator/maintainer, e.g. link
            to a contact form (RFC 3986 format) or an email (RFC 2368 format).
        logoUrl:
          type: string
          description: >-
            URL to the logo (PNG/JPG/SVG format) of the organization (RFC 3986
            format).
        info:
          description: 'Additional unspecified metadata about the host Organization.'
          type: object
          example:
            additionalInfoKey: additionalInfoValue
    BeaconDataset:
      description: A dataset available in the beacon.
      type: object
      required:
        - id
        - name
        - assemblyId
        - createDateTime
        - updateDateTime
      properties:
        id:
          type: string
          description: Unique identifier of the dataset.
        name:
          type: string
          description: Name of the dataset.
        description:
          type: string
          description: Description of the dataset.
        assemblyId:
          description: 'Assembly identifier (GRC notation, e.g. `GRCh37`).'
          type: string
          example: GRCh38
        createDateTime:
          type: string
          description: The time the dataset was created (ISO 8601 format).
          example: '2012-07-29 or 2017-01-17T20:33:40Z'
        updateDateTime:
          type: string
          description: The time the dataset was updated in (ISO 8601 format).
          example: '2012-07-19 or 2017-01-17T20:33:40Z'
        version:
          type: string
          description: Version of the dataset.
        variantCount:
          type: integer
          format: int64
          description: Total number of variants in the dataset.
          minimum: 0
        callCount:
          type: integer
          format: int64
          description: Total number of calls in the dataset.
          minimum: 0
        sampleCount:
          type: integer
          format: int64
          description: Total number of samples in the dataset.
          minimum: 0
        externalUrl:
          type: string
          description: >-
            URL to an external system providing more dataset information (RFC
            3986 format).
          example: 'http://example.org/wiki/Main_Page'
        info:
          description: 'Additional unspecified metadata about the dataset.'
          type: object
          example:
            additionalInfoKey1: [ additionalInfoValue1, additionalInfoValue2]
            additionalInfoKey2: additionalInfoValue3
        dataUseConditions:
          $ref: '#/components/schemas/DataUseConditions'
    BeaconDatasetAlleleResponse:
      description: Response containing information about an allele in a particular dataset.
      type: object
      required:
        - datasetId
      properties:
        datasetId:
          type: string
          description: not provided
        exists:
          description: >-
            Indicator of whether the given allele was observed in the dataset.
            This should be non-null, unless there was an error, in which case
            `error` has to be non-null.
          type: boolean
        error:
          $ref: '#/components/schemas/BeaconError'
        frequency:
          type: number
          description: 'Frequency of this allele in the dataset. Between 0 and 1, inclusive.'
          minimum: 0
          maximum: 1
        variantCount:
          type: integer
          format: int64
          description: Number of times the requested allele has been observed in the dataset.
          minimum: 0
        callCount:
          type: integer
          format: int64
          description: Total number of calls in the dataset. Missing calls are not included.
          minimum: 0
        sampleCount:
          type: integer
          format: int64
          description: Number of samples in the dataset where the requested allele is found.
          minimum: 0
        note:
          type: string
          description: Additional note or description of the response.
        externalUrl:
          type: string
          description: >-
            URL to an external system, such as a secured beacon or a system
            providing more information about a given allele (RFC 3986 format).
        info:
          description: 'Additional unspecified metadata about the dataset response or its content.'
          type: object
          example:
        datasetHandover:
          type: array
          items:
            $ref: '#/components/schemas/Handover'
    BeaconError:
      description: >-
        Beacon-specific error. This should be non-null in exceptional situations
        only, in which case `exists` has to be null.
      type: object
      required:
        - errorCode
      properties:
        errorCode:
          type: integer
          format: int32
          example: 'same as HTTP status code'
        errorMessage:
          type: string
    DataUseConditions:
      type: object
      required:
        - consentCodeDataUse
        - adamDataUse
      description: Data use conditions ruling this dataset.
      properties:
        consentCodeDataUse:
          $ref: >-
            https://raw.githubusercontent.com/ga4gh/ga4gh-consent-policy/v1.1.0/consent_code.yaml#/components/schemas/ConsentCodeDataUse
        adamDataUse:
          $ref: >-
            https://raw.githubusercontent.com/ga4gh/ADA-M/v1.0.1/adam.yaml#/components/schemas/Adam
    Handover:
      type: object
      required:
        - handoverType
        - url
      properties:
        handoverType:
          $ref: '#/components/schemas/HandoverType'
        note:
          type: string
          description: An optional text including considerations on the handover link provided.
          example: "This handover link provides access to a summarized VCF. To access the VCF containing the details for each sample filling an application is required. See Beacon contact information details."
        url:
          type: string
          description: URL endpoint to where the handover process could progress (in RFC 3986 format).
          example: "https://api.mygenomeservice.org/handover/9dcc48d7-fc88-11e8-9110-b0c592dbf8c0/"
    HandoverType:
      type: object
      required:
        - id
      description: |
            Handover type, as an Ontology_term object with CURIE syntax for the "id" value. 
      properties:
        id:
          type: string
          description: >-
            Use “CUSTOM” for the "id" when no ontology is available.
          default: CUSTOM
          example: "EFO:0004157"
        label:
          type: string
          description: >-
            This would be the "preferred Label" in the case of an ontology term.
          default: null
          example: "BAM format"
  examples:
    MetaContent:
      value:
        Individual: 
          - ga4gh-phenopacket-individual-v0.1
          - ga4gh-schemablocks-individual-v0.1
        Variant:
          - "ga4gh-variant-representation-v0.1"
          - "ga4gh-schemablocks-beacon-variant-v0.1"
    SnpQuery:
      summary: Query a SNP
      value:
        meta:
          request: 
            Variant: 
              - "beacon-variant-v0.1"
            VariantAnnotation: 
              - "beacon-variant-annotation-v1.0"
            VariantMetadata: 
              - "beacon-variant-metadata-v1.0"
          apiVersion: v2.0
        query:
          variant:
            referenceBases: "C"
            alternateBases: "T"
            referenceName: "10"
            start: 1111
            assemblyId: "GRCh37"
        datasets:
          datasetIds: 
            - 1
          includeDatasetResponses: HIT
        filters: 
          - 'BTO:0000199'
        customFilters: 
          - 'mydict.aterm:avalue'
    SnpResponse:
      summary: Example of SNP response
      
    RegionQuery:
      summary: Query a region
      value:
        meta:
          request: 
          apiVersion: v2.0
        query:
          variant:
            referenceName: "10"
            start: 1111
            end: 2222
            assemblyId: "GRCh37"
        datasets:
          datasetIds: 
            - 1
          includeDatasetResponses: HIT
        filters: 
        customFilters: 
          - 'mydict.aterm:avalue'
    
    IndividualQuery:
      summary: Search individuals
      value:
        meta:
          request: 
            Individual: 
              - "ga4gh-phenopacket-individual-v0.1"
              - "ga4gh-schemablocks-individual-v0.1"
            Variant: 
              - "ga4gh-variant-representation-v0.1"
              - "ga4gh-schemablocks-beacon-variant-v0.1"
            Sample: 
              - "ga4gh-schemablocks-biosample-v0.1"
          apiVersion: v2.0
        query:
          variant:
            referenceName: "17"
            start: 41228505
            end: 41228507
            assemblyId: "GRCh37"
        datasets:
          datasetIds: 
          includeDatasetResponses: HIT
        filters: 
          - 'BTO:0000199'
        customFilters: 
          - 'mydict.aterm:avalue'
    IndividualResponse:
      value:
        meta:
          Individual:
          - "beacon-individual-v1.0"
          - "ga4gh-phenopacket-individual-v0.1"
          - "ga4gh-schemablocks-individual-v0.1"
          Variant:
          - "beacon-variant-v0.1"
          - "ga4gh-variant-representation-v0.1"
          - "ga4gh-schemablocks-beacon-variant-v0.1"
          VariantAnnotation:
          - "beacon-variant-annotation-v1.0"
          VariaintMetadata:
          - "beacon-variant-metadata-v1.0"
          Sample:
          - "beacon-sample-v1.0"
          - "ga4gh-schemablocks-biosample-v0.1"
        value:
          beaconId: "org.ega-archive.ega-beacon"
          apiVersion: "v2.0"
          exists: true
          error: 
          request: 
            meta:
              request: 
              apiVersion: "v2.0"
            query: 
              variant: 
                referenceName: "17"
                start: 41228505
                end: 41228507
                assemblyId: "GRCh37"
              datasets: 
                datasetIds:
                  - 1
                includeDatasetResponses: "NONE"
              filters: 
                - "BTO:0000199"
              customFilters: 
                - "mydict.aterm:avalue"
          results:
          - individual:
              default:
                version: beacon-individual-v1.0
                value:
                  id: P001890267
                  sex: PATO:0020000
                  dateOfBirth: '1965-06-23'
                  ethnicity: caucasian
                  info: {}
              alternativeSchemas:
              - version: ga4gh-phenopacket-individual-v0.1
                value:
                  id: patient:0
                  alternate_ids: []
                  dateOfBirth: '1998-01-01T00:00:00Z'
                  age: P21
                  sex: MALE
                  karyotypic_sex: XY
                  taxonomy:
                    id: NCBITaxon:9606
                    label: Human
              - version: ga4gh-schemablocks-individual-v0.1
                value:
                  biocharacteristics:
                  - description: Patient with Down syndrome
                    type:
                      id: HP:0003745
                      label: Genetic anticipation
                  created: '2017-10-25T07:06:03Z'
                  data_use_conditions:
                    id: DUO:0000004
                    label: no restriction
                  description: patient with lung cancer, male smoker
                  external_references:
                  - description: Cellosaurus cell line identifier
                    relation: provenance
                    type:
                      id: cellosaurus:CVCL_0312
                      label: HOS
                  geo_provenance:
                    altitude: 94
                    city: Timisoara
                    country: Romania
                    label: Str Marasesti 5, 300077 Timisoara, Romania
                    latitude: 45.75
                    longitude: 21.23
                  id: AM_BS__NCBISKYCGH-1993
                  info:
                    first_name:
                      type: string
                      value: Ion
                    last_name:
                      type: string
                      value: Tichy
                  name: Ion Tichy, space explorer
                  organism:
                    id: NCBITaxon:9606
                    label: Homo sapiens
                  sex:
                    id: PATO:0020000
                    label: female genetic sex
                  updated: '2017-10-25T07:06:03Z'
            samples:
            - default:
                version: beacon-sample-v1.0
                value:
                  id: EGAN00043728
                  tissue:
                    id: BTO:0000199
                    label: cardiac muscle
                  description: Cancer
                  ageAtCollection: '56'
              alternativeSchemas:
              - version: ga4gh-schemablocks-biosample-v0.1
                value:
                  age_at_collection:
                    age: P56Y
                    age_class:
                      id: HP:0003621
                      label: Juvenile onset
                  biocharacteristics:
                  - description: Lobular Breast Carcinoma In Situ, study sample
                    type:
                      id: ncit:C4018
                      label: Lobular Breast Carcinoma In Situ
                  data_use_conditions:
                    id: DUO:0000004
                    label: no restriction
                  description: Burkitt lymphoma, cell line Namalwa
                  external_references:
                  - description: Cellosaurus cell line identifier
                    relation: provenance
                    type:
                      id: cellosaurus:CVCL_0312
                      label: HOS
                  geo_provenance:
                    altitude: '94'
                    city: Timisoara
                    country: Romania
                    label: Str Marasesti 5, 300077 Timisoara, Romania
                    latitude: '45.75'
                    longitude: '21.23'
                  id: AM_BS__NCBISKYCGH-1993
                  individual_id: ind-cnhl-1293347-004
                  info:
                    death: '1'
                    followup_time: P14M
                  name: Sample BRCA-00429, 2nd replicate
                  project_id: ind-cnhl-1293347-004
            variantsFound:
            - variant:
                default:
                  version: beacon-variant-v1.0
                  value:
                    variantDetails:
                      chromosome: '17'
                      referenceBases: C
                      alternateBases: A
                      variantType: SNP
                      start: 41228505
                      end: 41228506
                    info: {}
                alternativeSchemas:
                - version: ga4gh-variant-representation-v0.1
                  value:
                    location:
                      interval:
                        end: 41228506
                        start: 41228505
                        type: SimpleInterval
                      sequence_id: ga4gh:SQ.IIB53T8CNeJJdUqzn9V_JnRtQadwWCbl
                      type: SequenceLocation
                    state:
                      sequence: A
                      type: SequenceState
                    type: Allele
                - version: ga4gh-schemablocks-beacon-variant-v0.1
                  value:
                    alternate_bases:
                    - AC
                    - ACC
                    callset_id: DIPG_CS_0290
                    digest: 2:203420136:A>AC,ACC
                    genotype:
                    - '2'
                    - '1'
                    id: 5be1840772798347f0ed9e8b
                    reference_bases: A
                    reference_name: '2'
                    start:
                    - '41228505'
              variantAnnotations:
                default:
                  version: beacon-variant-annotation-v1.0
                  value:
                    variantMetadata:
                      default:
                        version: beacon-variant-metadata-v1.0
                        value:
                          geneId: BRCA1
                          HGVSId: chr17:g.41228505C>A
                          transcriptId: ENST00000357654.3
                          alleleId: CA002876
                          variantClassification: somatic
                          variantType: Missense Variant
                          disease: Breast Cancer
                          proteinChange: NA
                          clinVarId: '37598'
                          pubmedId: NA
                          timestamp: NA
                          info: {}
                      alternativeSchemas: {}
                    info:
                      cellBase: {}
                      dbSNP: {}
                      clinVar: {}
                alternativeSchemas: []
              variantHandover:
              datasetAlleleResponses:
          info:
          resultsHandover: []
          beaconHandover: []
    
    SampleQuery:
      summary: Search samples
      value:
        meta:
          request: 
          apiVersion: "v2.0"
        query:
          variant:
            referenceName: "17"
            start: 41228505
            end: 41228507
            assemblyId: "GRCh37"
        datasets:
          datasetIds: 
            - 1
          includeDatasetResponses: "NONE"
        filters: 
          - 'BTO:0000199'
        customFilters: 
          - 'mydict.aterm:avalue'
    SampleResponse:
      summary: Sample Response
      value:
        meta:
          Sample:
            - "beacon-sample-v1.0"
          Individual:
            - "beacon-individual-v1.0"
          Variant: 
            - "beacon-variant-v1.0"
          VariantMetadata:
            - "beacon-variant-metadata-v1.0"
        value:
          beaconId: "org.ega-archive.ega-beacon"
          apiVersion: "v2.0"
          exists: true
          error: null
          request:
            meta:
              request: 
              apiVersion: "v2.0"
            query: 
              variant: 
                referenceName: "17"
                start: 41228505
                end: 41228507
                assemblyId: "GRCh37"
              datasets: 
                datasetIds:
                  - 1
                includeDatasetResponses: "NONE"
              filters: 
                - "BTO:0000199"
              customFilters: 
                - "mydict.aterm:avalue"
          results:
            - sample:  
                default: 
                  version: "beacon-sample-v1.0"
                  value:
                    id: "EGAN00043728"
                    tissue: 
                      id: "BTO:0000199"
                      label: "cardiac muscle"
                    description: "Cancer"
                    ageAtCollection: "56"
                alternativeSchemas:
              individuals:
                - default: 
                    version: "beacon-individual-v1.0"
                    value: 
                      id: "P001890267"
                      sex: "PATO:0020000"
                      dateOfBirth: "1965-06-23"
                      ethnicity: "caucasian"
                      info: 
                  alternativeSchemas:
              variantsFound: 
                - variant: 
                    default: 
                      version: "beacon-variant-v1.0"
                      value: 
                        variantDetails: 
                          chromosome: "17"
                          referenceBases: "C"
                          alternateBases: "A"
                          variantType: "SNP"
                          start: 41228505
                          end: 41228506
                          info:
                    alternativeSchemas:
                  variantAnnotations:
                    default: 
                      version: "beacon-variant-annotation-v1.0"
                      value: 
                        variantMetadata: 
                          default: 
                            version: "beacon-variant-metadata-v1.0"
                            value: 
                              geneId: "BRCA1"
                              HGVSId: "chr17:g.41228505C>A"
                              transcriptId: "ENST00000357654.3"
                              alleleId: "CA002876"
                              variantClassification: "somatic"
                              variantType: "Missense Variant"
                              disease: "Breast Cancer"
                              proteinChange: "NA"
                              clinVarId: "37598"
                              pubmedId: "NA"
                              timestamp: "NA"
                              info:
                          alternativeSchemas:
                        info: 
                          cellBase: 
                          dbSNP: 
                          clinVar: 
                    alternativeSchemas: 
                  variantHandover:
                    handoverType:
                      id: "CUSTOM"
                      label: "Detailed information about the variant"
                    note: "External service with more information about the variant"
                    url: "https://api.mygenomeservice.org/handover/9dcc48d7-fc88-11e8-9110-b0c592dbf8c0/"
                  datasetAlleleResponses:
              info: 
              resultsHandover:
              beaconHandover:
